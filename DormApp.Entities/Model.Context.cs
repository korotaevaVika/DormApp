//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DormApp.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Dormitory_Entities : DbContext
    {
        public Dormitory_Entities()
            : base("name=Dormitory_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Account> Account { get; set; }
        public virtual DbSet<Agreement> Agreement { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<DormType> DormType { get; set; }
        public virtual DbSet<History> History { get; set; }
        public virtual DbSet<Mail> Mail { get; set; }
        public virtual DbSet<Payment> Payment { get; set; }
        public virtual DbSet<Person> Person { get; set; }
        public virtual DbSet<PriceList> PriceList { get; set; }
        public virtual DbSet<RoomType> RoomType { get; set; }
    
        [DbFunction("Dormitory_Entities", "GetRoomTypesByRoomNumberAndDormId")]
        public virtual IQueryable<GetRoomTypesByRoomNumberAndDormId_Result> GetRoomTypesByRoomNumberAndDormId(Nullable<int> room_num, Nullable<int> dorm_id)
        {
            var room_numParameter = room_num.HasValue ?
                new ObjectParameter("room_num", room_num) :
                new ObjectParameter("room_num", typeof(int));
    
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetRoomTypesByRoomNumberAndDormId_Result>("[Dormitory_Entities].[GetRoomTypesByRoomNumberAndDormId](@room_num, @dorm_id)", room_numParameter, dorm_idParameter);
        }
    
        public virtual int DeletePerson(Nullable<int> person_id, ObjectParameter message)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePerson", person_idParameter, message);
        }
    
        public virtual ObjectResult<GetDebts_Result> GetDebts(Nullable<int> dorm_id, Nullable<int> floor)
        {
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDebts_Result>("GetDebts", dorm_idParameter, floorParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNotEmptyFloors(Nullable<int> dorm_id)
        {
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNotEmptyFloors", dorm_idParameter);
        }
    
        public virtual ObjectResult<GetPersonListByFloor_Result> GetPersonListByFloor(Nullable<int> floor, Nullable<int> dorm_id)
        {
            var floorParameter = floor.HasValue ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(int));
    
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonListByFloor_Result>("GetPersonListByFloor", floorParameter, dorm_idParameter);
        }
    
        public virtual ObjectResult<GetPopulation_Result> GetPopulation(Nullable<int> dorm_id, Nullable<int> floor)
        {
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("floor", floor) :
                new ObjectParameter("floor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPopulation_Result>("GetPopulation", dorm_idParameter, floorParameter);
        }
    
        public virtual ObjectResult<GetPopulationInWholeDorm_Result> GetPopulationInWholeDorm(Nullable<int> dorm_id)
        {
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPopulationInWholeDorm_Result>("GetPopulationInWholeDorm", dorm_idParameter);
        }
    
        public virtual ObjectResult<string> GetRoomTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetRoomTypes");
        }
    
        public virtual int InsertPerson(string surname, string name, string lastname, Nullable<long> passport, Nullable<bool> is_male, Nullable<bool> is_student, Nullable<bool> on_budget, Nullable<int> country_id, string contract, Nullable<int> dorm_id, Nullable<int> floor_number, Nullable<int> room_number, Nullable<int> room_id, Nullable<System.DateTime> date_open, Nullable<System.DateTime> date_end)
        {
            var surnameParameter = surname != null ?
                new ObjectParameter("surname", surname) :
                new ObjectParameter("surname", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var passportParameter = passport.HasValue ?
                new ObjectParameter("passport", passport) :
                new ObjectParameter("passport", typeof(long));
    
            var is_maleParameter = is_male.HasValue ?
                new ObjectParameter("is_male", is_male) :
                new ObjectParameter("is_male", typeof(bool));
    
            var is_studentParameter = is_student.HasValue ?
                new ObjectParameter("is_student", is_student) :
                new ObjectParameter("is_student", typeof(bool));
    
            var on_budgetParameter = on_budget.HasValue ?
                new ObjectParameter("on_budget", on_budget) :
                new ObjectParameter("on_budget", typeof(bool));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var contractParameter = contract != null ?
                new ObjectParameter("contract", contract) :
                new ObjectParameter("contract", typeof(string));
    
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            var floor_numberParameter = floor_number.HasValue ?
                new ObjectParameter("floor_number", floor_number) :
                new ObjectParameter("floor_number", typeof(int));
    
            var room_numberParameter = room_number.HasValue ?
                new ObjectParameter("room_number", room_number) :
                new ObjectParameter("room_number", typeof(int));
    
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var date_openParameter = date_open.HasValue ?
                new ObjectParameter("date_open", date_open) :
                new ObjectParameter("date_open", typeof(System.DateTime));
    
            var date_endParameter = date_end.HasValue ?
                new ObjectParameter("date_end", date_end) :
                new ObjectParameter("date_end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPerson", surnameParameter, nameParameter, lastnameParameter, passportParameter, is_maleParameter, is_studentParameter, on_budgetParameter, country_idParameter, contractParameter, dorm_idParameter, floor_numberParameter, room_numberParameter, room_idParameter, date_openParameter, date_endParameter);
        }
    
        public virtual int SetRoomPrice(Nullable<int> room_id, Nullable<int> dorm_id, Nullable<decimal> new_price)
        {
            var room_idParameter = room_id.HasValue ?
                new ObjectParameter("room_id", room_id) :
                new ObjectParameter("room_id", typeof(int));
    
            var dorm_idParameter = dorm_id.HasValue ?
                new ObjectParameter("dorm_id", dorm_id) :
                new ObjectParameter("dorm_id", typeof(int));
    
            var new_priceParameter = new_price.HasValue ?
                new ObjectParameter("new_price", new_price) :
                new ObjectParameter("new_price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetRoomPrice", room_idParameter, dorm_idParameter, new_priceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
